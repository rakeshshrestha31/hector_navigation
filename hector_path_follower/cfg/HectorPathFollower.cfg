#!/usr/bin/env python
PACKAGE = "hector_path_follower"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("k_trans",  double_t, 0, "proportional gain translation",   2.0, 0.1,   10)
gen.add("k_rot",    double_t, 0, "proportional gain rotation",      2.0, 0.1,   10)

gen.add("tolerance_trans",      double_t, 0, "tolerance translation",   0.1, 0.05,  0.2)
gen.add("tolerance_rot",        double_t, 0, "tolerance rotation",      0.2, 0.1,   0.3)
gen.add("tolerance_timeout",    double_t, 0, "tolerance timeout",       2.0, 0.1,   0.5)


gen.add("max_vel_lin",          double_t, 0, "max_vel_lin",        0.9, 0.5,  2.5)
gen.add("max_vel_th",           double_t, 0, "max_vel_th",         1.4, 0.5,  2.5)

gen.add("min_vel_lin",          double_t, 0, "min_vel_lin",         0.1, 0.05,  0.2)
gen.add("min_vel_th",           double_t, 0, "min_vel_th",          0.0, 0.0,  0.1)

gen.add("min_in_place_vel_th",  double_t, 0, "min_in_place_vel_th", 0.0, 0.0,   0.1)
gen.add("in_place_trans_vel",   double_t, 0, "in_place_trans_vel",  0.0, 0.0,   0.1)

gen.add("trans_stopped_velocity",   double_t, 0,   "trans_stopped_velocity",   1e-4, 1e-5,   1e-1)
gen.add("rot_stopped_velocity",     double_t, 0,   "rot_stopped_velocity",     1e-4, 1e-5,   1e-1)

gen.add("samples",    int_t,    0, "Number of samples", 10,  5, 20)
gen.add("holonomic",  bool_t,   0, "A Boolean parameter",  False)

gen.add("robot_base_frame", str_t,    0, "robot_base_frame",    "base_link")
gen.add("global_frame",     str_t,    0, "global_frame",        "map")

exit(gen.generate(PACKAGE, "hector_path_follower", "HectorPathFollower"))